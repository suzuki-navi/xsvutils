## Scalaによるパーサの実装で目指しているもの

- いまのメンテしづらい main.pl を廃止して、サブコマンドの追加などのメンテをしやすい設計
- Scala Native または GraalVM の native-image により main.pl での実装と同じぐらいの高速起動
- 賢いシェル補完 (引数をパースしたうえで次に来るべきパラメータの種類を判別しての補完)
- 賢いヘルプ表示 (入力途中の引数列の最後に --help を付ければその時点で必要とするヘルプを表示)
- 複雑な構文解析に対応 (例 $ xsvutils a.tsv diff b.tsv cut title)


## いまのところの main.pl との仕様の違い

コマンドのパラメータを書ける場所に次のコマンド名を書いた場合に、従来は仕様では
それがパラメータなのかコマンド名なのかの区別ができないものとしてエラーとなっていたが、
新しい仕様ではコマンド名と解釈する。コマンド名と同じ名前のファイルが偶然存在していたとしても
コマンド名を優先する。実行環境による解釈の揺れを少しでも減らすためである。


## Scalaによるパーサへのリプレイス手順

- Makefile 整理
- 過去バージョンへのパッチの仕組み
- --jvm, --install-rt を廃止、既存の java,scala ソースを削除

- src ディレクトリにScalaパーサのソースを追加、 main.pl から


## メモ

実行例

    $ ./run.sh ../test/data/sample-3.tsv

補完

    $ . ./completion.zsh
    $ ./run.sh ../test/data/sample-3.tsv [TAB]

