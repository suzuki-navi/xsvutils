USAGE:
    $ xsvutils [[-i] <FILENAME>] [<SUBCOMMAND>] [<OPTION>|<PARAMETER>...] ...

    SUBCOMMAND には cut, limit などがある。`xsvutils help list` でサブコマンドの一覧を確認できる。

    オプションについての詳細は `xsvutils help options` を見ること。

    SUBCOMMAND は内容により複数を組み合わせることも可能。

    以下の例では cut がサブコマンド、 id,name がcutサブコマンドのパラメータである。

        $ xsvutils data.tsv cut id,name

    以下の例では cut がサブコマンド、 id がcutサブコマンドのパラメータであり、
    limit が次のサブコマンド、 100 がlimitサブコマンドのパラメータである。

        $ xsvutils data.tsv cut id limit 100

    標準出力が端末であれば端末に見やすく表示し、
    標準出力がファイル等であればTSVフォーマットで出力する。
    --o-csv オプションを指定し、標準出力が端末でない場合はCSVフォーマットで出力する。

    SUBCOMMAND 省略時はcatが指定されたものと同じで、入力データの中身を加工せずにそのまま出力する。

    サブコマンドによってはオプションやパラメータを受け付ける。
    各コマンドの詳しい使い方は `xsvutils help <SUBCOMMAND>` で確認できる。

    パラメータを受け付けるサブコマンドはすべて以下のようにオプションを使った同等の書き方も可能。

        $ xsvutils data.tsv cut title         (パラメータでの指定)
        $ xsvutils data.tsv cut --col title   (オプションでの指定)

    都度コマンドラインからコマンドを入力する際には1つ目の書き方が短くて便利だが、
    パラメータにどんな値が来るかわからない場合には別の解釈をされないようにオプションでの指定が必要。

        $ xsvutils data.tsv cut --col $COLUMN

    以下のように書いてしまうと、 $COLUMN が head という値の場合に、
    それが cut のパラメータではなく head というサブコマンドになってしまうので、避けること。

        $ xsvutils data.tsv cut $COLUMN

    以下のように最初のパラメータにバージョンを指定するオプションを渡すと、
    xsvutils の過去のバージョンによる動作になる。

        $ xsvutils -v4 ...

    詳細は `xsvutils help compatibility` を見ること。

