xsvutilsのインストール

    ソースコード一式を取得するのみ。実行ファイルは bin/xsvutils 。

    $ git clone https://github.com/xsvutils/xsvutils.git
    $ cd xsvutils
    $ PATH=$(pwd)/bin:$PATH # add xsvutils to $PATH

    一部の機能は別途ビルドをしないと動かない。以下はビルドが必要な機能とビルド方法の説明。


xsvutilsの旧バージョン(-vo)

    できること

        -vo オプションを最初に付けると、内部で旧バージョンを呼び出し、
        旧バージョンにしかない機能を使うことができる。

        例
            $ xsvutils -vo data.tsv update ...

        以下で旧バージョンのヘルプを閲覧できる。
            $ xsvutils -vo --help

    インストール方法

        xsvutilsのインストールされているディレクトリに移動して、以下を実行する。

            $ bash build/xsvutils1/build.sh

        これを実行すると var/xsvutils1 の中でビルドされる。
        ビルドに非常に時間がかかるので注意のこと。


Rust

    できること

        以下の機能がRustで実装されている。

        - CSVからTSVに変換 ( --csv オプション)

    インストール方法

        Rustを環境にインストールしてから、
        xsvutilsのインストールされているディレクトリに移動して、以下を実行する。

            $ bash build/rust/build.sh

        旧バージョン(-vo)を先述に従ってインストールすると、
        旧バージョンの環境内にRustがインストールされる。
        Rustがインストールされていなくても、旧バージョンの環境内にRustがあればそれを参照するので、
        Rustのインストール方法が不明な場合は、先に旧バージョンをインストールするとよい。


PerlのJSONモジュール

    できること

        以下の機能がPerlのJSONモジュールを利用している。

            - JSONからTSVに変換

        インストールされていないと以下のようなエラーメッセージが出る。

            Can't locate JSON.pm in @INC

    インストール方法

        Ubuntuであれば

            $ sudo apt install libjson-perl


    旧バージョン(20より前)からのユーザ向けの説明
        旧バージョンでは、makeですべての機能をビルドする方式だったが、
        ビルドに非常に時間がかかることからこの方式はやめ、
        必要なときに必要な部分だけビルドできるようにした。
        また、言語環境が必要な場合に内部にインストールする方式だったが、
        環境にすでにその言語環境がある場合はそれを利用するように変更した。

